/*
 */
package jotto5;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

/**
 *
 * @author Sterling
 */
public class jotto5 extends javax.swing.JFrame {

    /**
     */
    public jotto5() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        count = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        wordsGuessed = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        guessWordButton = new javax.swing.JButton();
        giveUpButton = new javax.swing.JButton();
        Holder2 = new javax.swing.JLabel();
        playAgainButton = new javax.swing.JButton();
        Holder1 = new javax.swing.JLabel();
        guessesSoFar = new javax.swing.JLabel();
        userGuess = new javax.swing.JTextField();
        Holder3 = new javax.swing.JLabel();
        Holder4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        count.setText("Next Guess:");

        wordsGuessed.setEditable(false);
        jScrollPane1.setViewportView(wordsGuessed);

        jLabel1.setText("Jotto");

        jLabel2.setText("Words Guessed:");

        guessWordButton.setText("Guess Word");
        guessWordButton.setEnabled(false);
        guessWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guessWordButtonActionPerformed(evt);
            }
        });

        giveUpButton.setText("Give Up");
        giveUpButton.setEnabled(false);
        giveUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                giveUpButtonActionPerformed(evt);
            }
        });

        Holder2.setForeground(new java.awt.Color(214, 217, 223));
        Holder2.setText("0");

        playAgainButton.setText("Play");
        playAgainButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                playAgainButtonActionPerformed(evt);
            }
        });

        Holder1.setForeground(new java.awt.Color(214, 217, 223));
        Holder1.setText(" ");

        guessesSoFar.setText("Guesses so far:");

        userGuess.setEnabled(false);

        Holder3.setText(" ");

        Holder4.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(count)
                        .addGap(85, 85, 85))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(117, 117, 117))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(guessesSoFar)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(userGuess, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(guessWordButton))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(giveUpButton)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(Holder1)
                                                .addGap(72, 72, 72)
                                                .addComponent(Holder2)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Holder3)
                                            .addComponent(playAgainButton))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addComponent(Holder4)
                        .addGap(45, 45, 45))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addComponent(jLabel1)
                .addGap(22, 22, 22)
                .addComponent(count)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(userGuess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guessWordButton))
                .addGap(55, 55, 55)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(guessesSoFar)
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(giveUpButton)
                    .addComponent(playAgainButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Holder1)
                    .addComponent(Holder2)
                    .addComponent(Holder3)
                    .addComponent(Holder4))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //Method when the guess button is pressed
    private void guessWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guessWordButtonActionPerformed
        //these are text fields hidden to the player that store the data between different buttons
        Holder1.setVisible(false);//holds Word
        Holder2.setVisible(false);//holds the line reading that is displayed to the user
        Holder3.setVisible(false);//holds outputLine text
        Holder4.setVisible(false);//holds number of guesses

//gets the secret word and the user input
        String userWord = userGuess.getText();
        String secretWord = Holder1.getText();

        //adds 1 to the number of tries and outputs it onto the text panel
        String Hold = Holder4.getText();
        int numberGuessesCounter = Integer.parseInt(Hold);
        numberGuessesCounter++;
        Holder4.setText(Integer.toString(numberGuessesCounter));
        guessesSoFar.setText("Guesses so far: " + numberGuessesCounter);

        //takes the user's word, breaks it up into Characters, places it into an ArrayList
        //the ArrayList is then converted into a set
        ArrayList<String> userWordChar = new ArrayList<>();
        for (int i = 0; i < userWord.length(); i++) {
            String holder = Character.toString(userWord.charAt(i));
            Collections.addAll(userWordChar, holder);
        }
        Set<String> userWordCharSet = new HashSet<String>(userWordChar);

        //takes the secret word, breaks it up into Characters, places it into an ArrayList
        //the ArrayList is then converted into a set       
        ArrayList<String> secretWordChar = new ArrayList<>();
        for (int i = 0; i < secretWord.length(); i++) {
            String holder = Character.toString(secretWord.charAt(i));
            Collections.addAll(secretWordChar, holder);
        }
        Set<String> secretWordCharSet = new HashSet<String>(secretWordChar);

        Set<String> unionSet = new HashSet<String>(userWordChar);
        unionSet.retainAll(secretWordChar);

        //System.out.println("UserWordSet: " + userWordCharSet);
        //System.out.println("SecretWordSet: " + secretWordCharSet);
        //System.out.println("Intersection of both sets: " + unionSet);
        //gets the intersection of the 2 sets (makes a set of any characters between the user's set and the secret word's set
        //stores the information into the array
        ArrayList<String> outputToUser = new ArrayList<String>();
        String currentOutputLine = userWord + "   " + unionSet.size();
        Collections.addAll(outputToUser, currentOutputLine);

        //reads the previous guesses in
        String previousOutputLine = Holder3.getText();
        String fullOutputLine = "";

        //it takes all of the user inputs along with their sizes then appends them all together
        // and displays them on the screen
        int counter = 0;
        for (int i = 0; i <= counter; i++) {
            fullOutputLine = previousOutputLine + "\n" + outputToUser.get(i);
        }
        Holder3.setText(fullOutputLine);
        wordsGuessed.setText(fullOutputLine);

        int unionSetSize = unionSet.size();
        //update if the person has picked duplicate letters or not
        count.setText("letters chosen correctly from a 5 letter word: " + (unionSet.size()) + " out of " + (secretWordCharSet.size()));
        userGuess.setText("");
        counter++;
        Holder2.setText(Integer.toString(counter));

        //if the word is correct, shut down the game 
        if (userWord.equals(secretWord)) {
            userGuess.setEnabled(false);
            guessWordButton.setEnabled(false);
            giveUpButton.setEnabled(false);
            guessesSoFar.setText("Congratulations, you won!!");
        }

    }//GEN-LAST:event_guessWordButtonActionPerformed
    //method that disables text boxes and resets everything when user presses give up button
    private void giveUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_giveUpButtonActionPerformed
//disable everything
        String secretWord = Holder1.getText();
        Holder2.setText("");
        userGuess.setEnabled(false);
        guessWordButton.setEnabled(false);
        giveUpButton.setEnabled(false);
        //displays answer and resets variables
        guessesSoFar.setText("The word was: " + secretWord + ". Please play again");
        Holder4.setText("0");
        wordsGuessed.setText("");
        Holder3.setText("");
    }//GEN-LAST:event_giveUpButtonActionPerformed

    private void playAgainButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_playAgainButtonActionPerformed
//method that reads in the file and checks for a new 

//read in a file and pick a word from the list
        String secretWord = null;
        try {
            double holder = 0;
            int index = 0;
            ArrayList<String> words = new ArrayList<>();
            Scanner scanner = new Scanner(new File("key.txt"));
            while (scanner.hasNext()) {
                words.add(scanner.nextLine());
            }

            index = (int) Math.round(holder = Math.random() * words.size());
            secretWord = words.get(index);
        } catch (IOException exception) {
            System.out.println("the key file has been removed.");

        }
        //re-enable all the buttons
        System.out.println("Secret word: " + secretWord);
        Holder1.setText(secretWord);
        Holder2.setText("");
        Holder4.setText("0");
        userGuess.setEditable(true);
        userGuess.setEnabled(true);
        guessWordButton.setEnabled(true);
        giveUpButton.setEnabled(true);
        wordsGuessed.setText("");
        Holder3.setText("");
    }//GEN-LAST:event_playAgainButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(jotto5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(jotto5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(jotto5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(jotto5.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new jotto5().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Holder1;
    private javax.swing.JLabel Holder2;
    private javax.swing.JLabel Holder3;
    private javax.swing.JLabel Holder4;
    private javax.swing.JLabel count;
    private javax.swing.JButton giveUpButton;
    private javax.swing.JButton guessWordButton;
    private javax.swing.JLabel guessesSoFar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton playAgainButton;
    private javax.swing.JTextField userGuess;
    private javax.swing.JTextPane wordsGuessed;
    // End of variables declaration//GEN-END:variables
}
